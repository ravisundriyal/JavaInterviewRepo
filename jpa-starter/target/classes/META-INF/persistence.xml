<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">

    <persistence-unit name="jpaApp" transaction-type="RESOURCE_LOCAL"> 										 <!-- JTA Java transaction API for distributed databases  --> 
        <description>
            Persistence unit for the JPA tutorial - Getting Started Guide
        </description>
        <provider>org.hibernate.ejb.HibernatePersistence</provider>               							<!-- Implementer of JPA  -->
        <!--        
        <class>org.halyph.sessiondemo.Event</class>
        -->       

        <properties>																						
        																								<!-- STARTS WITH "javax.persistence" Properties for the JPA  -->				
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />					<!-- DATABASE DRIVER -->
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/jpa_db" />       <!-- DATABASE CONNECTION STRING -->
            <property name="javax.persistence.jdbc.user" value="root" />									<!-- DATABASE USERNAME -->	
            <property name="javax.persistence.jdbc.password" value="123@MyRoot" />							<!-- DATABASE USER PWD -->

																										<!-- STARTS WITH "hibernate."Properties for the provider of JPA  -->			
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect" />				<!-- DATABASE SQL GRAMMER -->
            <property name="hibernate.show_sql" value="true" />												<!--  -->
            <property name="hibernate.format_sql" value="true" />											<!--  -->
            <property name="hibernate.hbm2ddl.auto" value="none" />									<!--create-drop it drops and creates the schema every time on start and context end-->	
            																								<!--validate  it validates ORM mapping with existing database-->
            																								<!--create similar to create-drop it drops and creates the schema every time context is created-->
            																								<!--update the existing or newly created schema-->
            																								<!-- none does nothing  -->							
        </properties>

    </persistence-unit>

</persistence>